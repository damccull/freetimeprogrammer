# Execute this workflow on every push
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  ZOLA_VERSION: 0.17.2


# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

name: Build and Deploy GH Pages
jobs:
  # build:
  #   name: Publish site
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout main
  #       uses: actions/checkout@v3.0.0
  #     - name: Build and deploy
  #       uses: shalzz/zola-deploy-action@v0.17.2
  #       env:
  #         # Target branch
  #         PAGES_BRANCH: gh-pages
  #         # Provide personal access token
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build:
    name: Build Site with Zola
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main
        uses: actions/checkout@v3.0.0
      - name: Install zola
        uses: taiki-e/install-action@v2
        with:
          tool: zola@${{ env.ZOLA_VERSION }}
      - name: Build site
        run: |
          echo "BUILDING SITE"
          ls -al
          zola build -o _site
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
  deploy:
    name: Deploy to Github Pages
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy the site
        id: deployment
        uses: actions/deploy-pages@v2
